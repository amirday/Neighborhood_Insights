repos:
  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=88']
        files: ^(api|etl)/.*\.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']
        files: ^(api|etl)/.*\.py$

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']
        files: ^(api|etl)/.*\.py$

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-redis]
        args: ['--ignore-missing-imports']
        files: ^(api|etl)/.*\.py$

  # Frontend formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^app/.*\.(js|jsx|ts|tsx|json|css|md|yml|yaml)$
        exclude: ^app/(\.next|node_modules)/

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: ^app/.*\.(js|jsx|ts|tsx)$
        exclude: ^app/(\.next|node_modules)/
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-next@14.0.0

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^app/(\.next|node_modules)/
      - id: end-of-file-fixer
        exclude: ^app/(\.next|node_modules)/
      - id: check-yaml
        exclude: ^app/(\.next|node_modules)/
      - id: check-json
        exclude: ^app/(\.next|node_modules)/
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
        files: ^(api|etl)/.*\.py$

  # SQL formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.5
    hooks:
      - id: sqlfluff-lint
        files: ^db/.*\.sql$
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']
      - id: sqlfluff-fix
        files: ^db/.*\.sql$
        additional_dependencies: ['dbt-postgres', 'sqlfluff-templater-dbt']

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-r', '-f', 'json', '-o', '/tmp/bandit-report.json']
        files: ^(api|etl)/.*\.py$

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: bash -c 'cd api && python -m pytest tests/unit/ --maxfail=1 -q'
        language: system
        files: ^api/.*\.py$
        pass_filenames: false

      - id: check-env-example
        name: check-env-example
        entry: bash -c 'if [[ -f .env && ! -f .env.example ]]; then echo "ERROR: .env exists but .env.example is missing"; exit 1; fi'
        language: system
        files: ^\.env.*$
        pass_filenames: false

      - id: no-secrets-in-code
        name: no-secrets-in-code
        entry: bash -c 'if grep -r "sk-[a-zA-Z0-9]\{20,\}" api/ etl/ app/ --exclude-dir=node_modules --exclude-dir=.next 2>/dev/null; then echo "ERROR: Potential API key found in code"; exit 1; fi'
        language: system
        files: ^(api|etl|app)/.*\.(py|js|jsx|ts|tsx)$
        pass_filenames: false